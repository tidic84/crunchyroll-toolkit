#!/usr/bin/env node

/**
 * Test manuel avec URL d'√©pisode connue pour tester la logique d'extraction
 */

async function testManualEpisodeUrl() {
  let scraper;
  
  try {
    console.log('üöÄ Test manuel URL √©pisode');
    
    const { createZenRowsCrunchyrollScraper } = require('./lib/zenrows.index');
    
    scraper = await createZenRowsCrunchyrollScraper({
      headless: false,
      timeout: 30000
    });

    // Essayer plusieurs URLs possibles pour Fire Force
    const testUrls = [
      'https://www.crunchyroll.com/series/GYQYXMKX6/fire-force',
      'https://www.crunchyroll.com/fr/series/GYQYXMKX6',
      'https://www.crunchyroll.com/series/fire-force',
      'https://www.crunchyroll.com/fr/search?q=Fire+Force'
    ];
    
    for (const testUrl of testUrls) {
      console.log(`\nüéØ Test: ${testUrl}`);
      
      try {
        const detailsResult = await scraper.getAnimeDetails(testUrl);
        if (detailsResult.success && detailsResult.data.title) {
          console.log(`‚úÖ Titre trouv√©: ${detailsResult.data.title}`);
          
          // Si on trouve un titre, essayer les √©pisodes
          const episodesResult = await scraper.getEpisodes(testUrl);
          if (episodesResult.success && episodesResult.data.length > 0) {
            console.log(`‚úÖ ${episodesResult.data.length} √©pisodes trouv√©s!`);
            episodesResult.data.slice(0, 2).forEach((ep, i) => {
              console.log(`  ${i+1}. ${ep.title} (S${ep.seasonNumber}E${ep.episodeNumber})`);
            });
            break; // On a trouv√© ce qu'on cherchait
          } else {
            console.log(`‚ö†Ô∏è Pas d'√©pisodes: ${episodesResult.error || 'aucun trouv√©'}`);
          }
        } else {
          console.log(`‚ùå Pas de titre: ${detailsResult.error || 'vide'}`);
        }
      } catch (error) {
        console.log(`‚ùå Erreur: ${error.message}`);
      }
    }

  } catch (error) {
    console.error('‚ùå Erreur globale:', error.message);
  } finally {
    if (scraper) {
      await scraper.close();
    }
  }
}

testManualEpisodeUrl();